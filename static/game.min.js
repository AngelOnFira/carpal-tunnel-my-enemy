function setup(){init()}function draw(){spawn(),rect(0,0,700,700);for(var i=0;i<4;i++)for(var t=0;t<enemies[i].length;){var o=enemies[i][t];if(o.update())enemies[i].splice(t,1);else{t+=1;var e=color(255-(o.health/50*200+40),o.health/50*200+40,0);fill(e),noStroke(),rect(int(o.position.x-10),int(o.position.y-10),20,20);for(var s=o.incomingProjectiles.length,n=0;n<s;n++){var r=o.incomingProjectiles[n];e=color(220,10,10);fill(e),ellipse(r.position.x,r.position.y,10)}}}for(var h=0;h<walls.length;h++){var l=walls[h];e=color(255-(l.health/500*200+40),l.health/500*200+40,0);fill(e),noStroke(),rect(l.position.x,l.position.y,l.dims.x,l.dims.y)}for(h=0;h<towers.length;h++){var a=towers[h];e=color(40,40,220);fill(e),noStroke(),rect(a.position.x,a.position.y,30,30)}e=color(0,0,0);fill(e)}function mousePressed(){}function Enemy(i){var t,o;0==i?(t=random(250,450),o=-20):1==i?(t=720,o=random(250,450)):2==i?(t=random(250,450),o=720):3==i&&(t=-20,o=random(250,450)),this.lane=i,this.position={},this.position.x=t,this.position.y=o,this.health=50,this.incomingProjectiles=[]}function Wall(i,t,o){this.vert=o,this.position={},this.position.x=i,this.position.y=t,this.health=500,this.dims={},o?(this.dims.x=10,this.dims.y=100,this.position.x-=5,this.position.y-=50):(this.dims.x=100,this.dims.y=10,this.position.x-=50,this.position.y-=5)}function spawn(){var i=random([0,1,2,3]);millis()-lastSpawn>currentSpawnTime&&(enemies[i].push(new Enemy(i)),lastSpawn=millis())}function init(){var i=createCanvas(700,700),t=(windowWidth-width)/2,o=(windowHeight-height)/2;i.position(t,o),enemies=[[],[],[],[]],walls=[],towers=[],keysPressed=[0,0,0,0],walls.push(new Wall(350,250,0)),walls.push(new Wall(450,350,1)),walls.push(new Wall(350,450,0)),walls.push(new Wall(250,350,1)),towers.push(new Tower(280,280)),towers.push(new Tower(390,280)),towers.push(new Tower(280,390)),towers.push(new Tower(390,390));millis();currentSpawnTime=200,lastSpawn=millis(),frameRate(30)}function Tower(i,t,o){this.position={},this.position.x=i,this.position.y=t,this.health=500}function keyPressed(){console.log(keyCode),65!=keyCode&&97!=keyCode||(towers[0].fire(3),towers[3].fire(3)),87!=keyCode&&119!=keyCode||(towers[0].fire(0),towers[1].fire(0)),68!=keyCode&&100!=keyCode||(towers[1].fire(1),towers[2].fire(1)),83!=keyCode&&115!=keyCode||(towers[2].fire(2),towers[3].fire(2))}function Projectile(i,t,o){this.position={},this.position.x=i,this.position.y=t,this.damage=o,console.log(i,t)}function distNS(i,t,o,e){return Math.pow(i-o,2)+Math.pow(t-e,2)}function distS(i,t,o,e){return Math.sqrt(distNS(i,t,o,e))}function calcMovement(i,t,o,e,s){var n=o-i,r=e-t,h=distS(i,t,o,e);return[n/h*s,r/h*s]}Enemy.prototype.update=function(){if(this.move(),this.updateIncomingProjectiles(),this.checkAlive())return console.log("dead"),1},Enemy.prototype.move=function(){0==this.lane?this.position.y+=1:1==this.lane?this.position.x-=1:2==this.lane?this.position.y-=1:3==this.lane&&(this.position.x+=1)},Enemy.prototype.checkAlive=function(){if(this.health<=0)return this.die(),1;if(0==this.lane){if(250<this.position.y)return this.die(),1}else if(1==this.lane){if(this.position.x<450)return this.die(),1}else if(2==this.lane){if(this.position.y<450)return this.die(),1}else if(3==this.lane&&250<this.position.x)return this.die(),1;return 0},Enemy.prototype.die=function(){walls[this.lane].health-=30},Enemy.prototype.shoot=function(i,t){this.incomingProjectiles.push(new Projectile(i,t,10))},Enemy.prototype.updateIncomingProjectiles=function(){for(var i=0;i<this.incomingProjectiles.length;i++){var t=this.incomingProjectiles[i];t.update(this.position.x,this.position.y)&&(this.health-=t.damage)}},Tower.prototype.findTarget=function(i){for(var t=-1,o=0,e=0;e<enemies[i].length;e++){var s=enemies[i][e];distance=distNS(s.position.x,s.position.y,this.position.x,this.position.y),(distance<t||-1==t)&&(t=distance,o=e)}console.log(t),-1!=t&&enemies[i][o].shoot(this.position.x,this.position.y)},Tower.prototype.fire=function(i){this.findTarget(i)},Projectile.prototype.update=function(i,t){var o=calcMovement(this.position.x,this.position.y,i,t,10);return this.position.x+=o[0],this.position.y+=o[1],distNS(this.position.x,this.position.y,i,t)<100?1:0};